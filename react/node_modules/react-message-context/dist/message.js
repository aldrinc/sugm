'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _getMessage = require('./get-message');

var _getMessage2 = _interopRequireDefault(_getMessage);

var _messageContext = require('./message-context');

var _propTypes3 = require('./prop-types');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var Message = function Message(_ref) {
  var children = _ref.children,
      id = _ref.id,
      locale = _ref.locale,
      onError = _ref.onError,
      params = _ref.params,
      msgParams = _objectWithoutProperties(_ref, ['children', 'id', 'locale', 'onError', 'params']);

  return _react2.default.createElement(
    _messageContext.Consumer,
    null,
    function (_ref2) {
      var locales = _ref2.locales,
          messages = _ref2.messages,
          pathSep = _ref2.pathSep;

      var lc = Array.isArray(locale) ? locale : locale ? [locale] : locales;
      var msg = (0, _getMessage2.default)(messages, lc, id, pathSep);
      if (children) return children(msg);
      switch (typeof msg === 'undefined' ? 'undefined' : _typeof(msg)) {
        case 'function':
          return msg(Object.assign(msgParams, params));
        case 'boolean':
        case 'number':
        case 'string':
          return String(msg);
        default:
          var res = onError && onError(id, typeof msg === 'undefined' ? 'undefined' : _typeof(msg));
          if (!res) res = pathSep && Array.isArray(id) ? id.join(pathSep) : String(id);
          return res;
      }
    }
  );
};

Message.propTypes = {
  children: _propTypes2.default.func,
  id: _propTypes3.PathType,
  locale: _propTypes3.PathType,
  onError: _propTypes2.default.func,
  params: _propTypes2.default.object
};

exports.default = Message;